% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/engine_hybrid.R
\name{fuzzycoco_fit_df_hybrid}
\alias{fuzzycoco_fit_df_hybrid}
\title{lowest-level implementation of the fitting of a fuzzy coco model using the \strong{hybrid engine}}
\usage{
fuzzycoco_fit_df_hybrid(
  model,
  x,
  y,
  until = stop_engine_on_first_of(max_generations =
    model$params$global_params$max_generations, max_fitness =
    model$params$global_params$max_fitness),
  verbose = model$verbose,
  progress = TRUE
)
}
\arguments{
\item{model}{a Fuzzy Coco model as a \code{fuzzy_coco} object}

\item{x}{the input variables data (usually to fit) as a dataframe}

\item{y}{the output variables data (usually to fit)  as a dataframe}

\item{until}{function that takes an \code{engine} and returns TRUE if and only if the evolution must stop.
It is a way for the user to customize the stop conditions of the algorithm.}

\item{verbose}{whether to be verbose}

\item{progress}{whether to display the computation progress (using progressr, if available)}
}
\value{
a named list as a \code{fuzzy_coco} fit object
}
\description{
lowest-level implementation of the fitting of a fuzzy coco model using the \strong{hybrid engine}
}
\examples{
 x <- mtcars[c("mpg", "hp", "wt")]
 y <- mtcars["qsec"]
 pms <- params(
   nb_rules = 2, nb_max_var_per_rule = 3, rules.pop_size = 20, mfs.pop_size = 20, 
   ivars.nb_sets = 3, ivars.nb_bits_vars = 3,  ivars.nb_bits_sets = 2, ivars.nb_bits_pos = 8, 
   ovars.nb_sets = 3, ovars.nb_bits_vars = 1, ovars.nb_bits_sets = 2, ovars.nb_bits_pos = 8, 
   metricsw.sensitivity = 0, metricsw.specificity = 0, metricsw.rmse = 1,
   output_vars_defuzz_thresholds = 17
 )
 model <- fuzzycoco("regression", pms)

 fit <- fuzzycoco_fit_df_hybrid(model, x, y)
}
